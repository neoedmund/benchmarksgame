<span class="slc">#  The Computer Language Benchmarks Game</span>
<span class="slc">#  http://benchmarksgame.alioth.debian.org/</span>
<span class="slc">#  contributed by Karl FORNER</span>
<span class="slc"># (borrowed fasta loading routine from Kjetil Skotheim, 2005-11-29)</span>
<span class="slc"># Corrected again by Jesse Millikan</span>
<span class="slc"># revised by Kuang-che Wu</span>

<span class="kwc">my</span> (<span class="kwb">$sequence</span>);
$/ = <span class="str">&quot;&gt;&quot;</span>;
<span class="kwd">/^THREE/</span> <span class="kwc">and</span> <span class="kwb">$sequence</span> = <span class="kwc">uc</span>(<span class="kwc">join</span> <span class="str">&quot;&quot;</span>, <span class="kwc">grep</span> !<span class="kwd">/^THREE/</span>, <span class="kwc">split</span> <span class="kwd">/\n+/</span>) <span class="kwa">while</span> &lt;STDIN&gt;;

<span class="kwc">my</span> (<span class="kwb">$l</span>,<span class="kwb">%h</span>,<span class="kwb">$sum</span>) = (<span class="kwc">length</span> <span class="kwb">$sequence</span>);
<span class="kwa">foreach</span> <span class="kwc">my</span> <span class="kwb">$frame</span> (<span class="num">1</span>,<span class="num">2</span>) {
  <span class="kwb">%h</span> = ();
  update_hash_for_frame(<span class="kwb">$frame</span>);
  <span class="kwb">$sum</span> = <span class="kwb">$l</span> - <span class="kwb">$frame</span> + <span class="num">1</span>;
  <span class="kwc">printf</span> <span class="str">&quot;</span><span class="ipl">$_</span> <span class="str">%.3f</span><span class="esc">\n</span><span class="str">&quot;</span>, <span class="kwb">$h</span>{<span class="kwb">$_</span>}*<span class="num">100</span>/<span class="kwb">$sum</span> <span class="kwa">for</span> <span class="kwc">sort</span> { <span class="kwb">$h</span>{<span class="kwb">$b</span>} &lt;=&gt; <span class="kwb">$h</span>{<span class="kwb">$a</span>} || <span class="kwb">$a</span> <span class="kwc">cmp</span> <span class="kwb">$b</span> } <span class="kwc">keys</span> <span class="kwb">%h</span>;
  <span class="kwc">print</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>;
}

<span class="kwa">foreach</span> <span class="kwc">my</span> <span class="kwb">$s</span> (<span class="kwc">qw</span>(GGT GGTA GGTATT GGTATTTTAATT GGTATTTTAATTTATAGT)) {
  update_hash_for_frame(<span class="kwc">length</span>(<span class="kwb">$s</span>));
  <span class="kwc">printf</span> <span class="str">&quot;</span><span class="ipl">%d</span><span class="str"></span><span class="esc">\t</span><span class="str"></span><span class="ipl">$s</span><span class="str"></span><span class="esc">\n</span><span class="str">&quot;</span>, <span class="kwb">$h</span>{<span class="kwb">$s</span>};
}

<span class="kwa">sub</span> update_hash_for_frame {
  <span class="kwc">my</span> <span class="kwb">$frame</span> = <span class="kwb">$_</span>[<span class="num">0</span>];
  <span class="kwb">$h</span>{<span class="kwc">substr</span>(<span class="kwb">$sequence</span>,<span class="kwb">$_</span>,<span class="kwb">$frame</span>)}++ <span class="kwa">foreach</span> (<span class="num">0</span>..(<span class="kwb">$l</span> - <span class="kwb">$frame</span>));
}

