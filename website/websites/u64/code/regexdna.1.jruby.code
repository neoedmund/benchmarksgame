<span class="slc"># The Computer Language Benchmarks Game</span>
<span class="slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># contributed by jose fco. gonzalez</span>

seq = <span class="kwc">STDIN</span>.readlines.join
ilen = seq.size

seq.gsub!(<span class="kwc">/&gt;.*\n|\n/</span>,<span class="str">&quot;&quot;</span><span class="opt">)</span>
clen = seq.length

[
  <span class="kwc">/agggtaaa|tttaccct/</span>i,
  <span class="kwc">/[cgt]gggtaaa|tttaccc[acg]/</span>i,
  <span class="kwc">/a[act]ggtaaa|tttacc[agt]t/</span>i,
  <span class="kwc">/ag[act]gtaaa|tttac[agt]ct/</span>i,
  <span class="kwc">/agg[act]taaa|ttta[agt]cct/</span>i,
  <span class="kwc">/aggg[acg]aaa|ttt[cgt]ccct/</span>i,
  <span class="kwc">/agggt[cgt]aa|tt[acg]accct/</span>i,
  <span class="kwc">/agggta[cgt]a|t[acg]taccct/</span>i,
  <span class="kwc">/agggtaa[cgt]|[acg]ttaccct/</span>i
].each {|f| puts &quot;#{f.source} <span class="slc">#{seq.scan(f).size}&quot; }</span>

{
<span class="str">'B'</span> =&gt; <span class="str">'(c|g|t)</span><span class="str">', '</span>D<span class="str">' =&gt; '</span>(a|g|t<span class="opt">)</span><span class="str">', '</span>H<span class="str">' =&gt; '</span>(a|c|t<span class="opt">)</span><span class="str">', '</span>K<span class="str">' =&gt; '</span>(g|t<span class="opt">)</span><span class="str">',</span>
<span class="str">'</span>M<span class="str">' =&gt; '</span>(a|c<span class="opt">)</span><span class="str">', '</span>N<span class="str">' =&gt; '</span>(a|c|g|t<span class="opt">)</span><span class="str">', '</span>R<span class="str">' =&gt; '</span>(a|g<span class="opt">)</span><span class="str">', '</span>S<span class="str">' =&gt; '</span>(c|t<span class="opt">)</span><span class="str">',</span>
<span class="str">'</span>V<span class="str">' =&gt; '</span>(a|c|g<span class="opt">)</span><span class="str">', '</span>W<span class="str">' =&gt; '</span>(a|t<span class="opt">)</span><span class="str">', '</span>Y<span class="str">' =&gt; '</span>(c|t<span class="opt">)</span><span class="str">'</span>
<span class="str">}.each</span> <span class="ipl">{ |f,r| seq.gsub!(f,r) }</span>
<span class="str"></span>
<span class="str">puts</span>
<span class="str">puts ilen</span>
<span class="str">puts clen</span>
<span class="str">puts seq.length</span>
