<span class="slc"># The Computer Language Benchmarks Game</span>
<span class="slc"># http://benchmarksgame.alioth.debian.org/</span>

<span class="slc"># contributed by Jacob Lee, Steven Bethard, et al</span>
<span class="slc"># 2to3, fixed by Daniele Varrazzo</span>
<span class="slc"># modified by Daniel Nanz</span>
<span class="slc"># read() input, write in reverse, cleanups by J. Kleint</span>

<span class="kwa">import</span> sys

<span class="kwa">def</span> <span class="kwd">show</span>(seq, table, write=sys.stdout.<span class="kwb">buffer</span>.write, nl=b<span class="str">'</span><span class="esc">\n</span><span class="str">'</span>):
    header, s = seq.<span class="kwd">split</span>(nl, <span class="num">1</span>)
    s = s.<span class="kwd">translate</span>(table, nl)
    <span class="kwd">write</span>(b<span class="str">'&gt;'</span> + header + nl)
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">range</span>(<span class="kwb">len</span>(s) - <span class="num">60</span> - <span class="num">1</span>, -<span class="num">1</span>, -<span class="num">60</span>):
        <span class="kwd">write</span>(s[i + <span class="num">60</span>:i:-<span class="num">1</span>] + nl)
    <span class="kwd">write</span>(s[<span class="num">0</span>:i + <span class="num">1</span>][::-<span class="num">1</span>] + nl)

<span class="kwa">def</span> <span class="kwd">main</span>():
    table = bytes.<span class="kwd">maketrans</span>(b<span class="str">'ACBDGHKMNSRUTWVYacbdghkmnsrutwvy'</span>, 
                            b<span class="str">'TGVHCDMKNSYAAWBRTGVHCDMKNSYAAWBR'</span>)
    <span class="kwa">for</span> seq <span class="kwa">in</span> sys.stdin.<span class="kwb">buffer</span>.<span class="kwd">read</span>().<span class="kwd">split</span>(b<span class="str">'&gt;'</span>)[<span class="num">1</span>:]:
        <span class="kwd">show</span>(seq, table)

<span class="kwd">main</span>()
