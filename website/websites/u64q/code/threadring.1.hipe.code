<span class="slc">% The Computer Language Benchmarks Game</span>
<span class="slc">% http://benchmarksgame.alioth.debian.org/</span>
<span class="slc">%%% Contributed by Jiri Isa</span>
<span class="slc">%%% optimized run time options by shun shino</span>

<span class="opt">-</span><span class="kwd">module</span><span class="opt">(</span>threadring<span class="opt">).</span>
<span class="opt">-</span><span class="kwd">export</span><span class="opt">([</span>main<span class="opt">/</span><span class="num">1</span><span class="opt">,</span> roundtrip<span class="opt">/</span><span class="num">2</span><span class="opt">]).</span>

<span class="opt">-</span><span class="kwd">define</span><span class="opt">(</span>RING<span class="opt">,</span> <span class="num">503</span><span class="opt">).</span>

<span class="kwd">start</span><span class="opt">(</span>Token<span class="opt">) -&gt;</span>
   H <span class="opt">=</span> <span class="kwc">lists</span><span class="opt">:</span><span class="kwd">foldl</span><span class="opt">(</span>
      <span class="kwa">fun</span><span class="opt">(</span>Id<span class="opt">,</span> Pid<span class="opt">) -&gt;</span> <span class="kwb">spawn</span><span class="opt">(</span>threadring<span class="opt">,</span> roundtrip<span class="opt">, [</span>Id<span class="opt">,</span> Pid<span class="opt">])</span> <span class="kwa">end</span><span class="opt">,</span> 
      <span class="kwb">self</span><span class="opt">(),</span> 
      <span class="kwc">lists</span><span class="opt">:</span><span class="kwd">seq</span><span class="opt">(</span>?RING<span class="opt">,</span> <span class="num">2</span><span class="opt">, -</span><span class="num">1</span><span class="opt">)),</span>
   H <span class="opt">!</span> Token<span class="opt">,</span>
   <span class="kwd">roundtrip</span><span class="opt">(</span><span class="num">1</span><span class="opt">,</span> H<span class="opt">).</span>

<span class="kwd">roundtrip</span><span class="opt">(</span>Id<span class="opt">,</span> Pid<span class="opt">) -&gt;</span>
   <span class="kwa">receive</span>
      <span class="num">1</span> <span class="opt">-&gt;</span>
         <span class="kwc">io</span><span class="opt">:</span><span class="kwd">fwrite</span><span class="opt">(</span><span class="str">&quot;~b~n&quot;</span><span class="opt">, [</span>Id<span class="opt">]),</span>
         <span class="kwc">erlang</span><span class="opt">:</span><span class="kwb">halt</span><span class="opt">();</span>
      Token <span class="opt">-&gt;</span>
         Pid <span class="opt">!</span> Token <span class="opt">-</span> <span class="num">1</span><span class="opt">,</span>
         <span class="kwd">roundtrip</span><span class="opt">(</span>Id<span class="opt">,</span> Pid<span class="opt">)</span>
   <span class="kwa">end</span><span class="opt">.</span>

<span class="kwd">main</span><span class="opt">([</span>Arg<span class="opt">]) -&gt;</span>
   Token <span class="opt">=</span> <span class="kwb">list_to_integer</span><span class="opt">(</span>Arg<span class="opt">),</span>
   <span class="kwd">start</span><span class="opt">(</span>Token<span class="opt">).</span>
