<span class="com">/* The Computer Language Benchmarks Game</span>
<span class="com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="com">   contributed by Thomas GODART (based on Greg Buchholz's C program)</span>
<span class="com">   modified by TA</span>
<span class="com">*/</span>
<span class="kwa">var</span> i, x, y,
    bit_num = <span class="num">0</span>,
    byte_acc = <span class="num">0</span>,
    iter = <span class="num">50</span>,
    limit = <span class="num">4</span>,
    Zr, Zi, Cr, Ci, Tr, Ti,
    d = +arguments[<span class="num">0</span>];

<span class="kwd">print</span>(<span class="str">&quot;P4</span><span class="esc">\n</span><span class="str">&quot;</span> + d + <span class="str">&quot; &quot;</span> + d + <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>);

<span class="kwa">for</span> (y = <span class="num">0</span>; y &lt; d; y += <span class="num">1</span>) {
  <span class="kwa">for</span> (x = <span class="num">0</span>; x &lt; d; x += <span class="num">1</span>) {
    Zr = <span class="num">0</span>,
    Zi = <span class="num">0</span>,
    Tr =<span class="num">0</span>,
    Ti =<span class="num">0</span>,
    Cr = <span class="num">2</span> * x / d - <span class="num">1.5</span>,
    Ci = <span class="num">2</span> * y / d - <span class="num">1</span>;

    <span class="kwa">for</span> (i = <span class="num">0</span>; i &lt; iter &amp;&amp; Tr + Ti &lt;= limit; i += <span class="num">1</span>) {
      Zi = <span class="num">2</span> * Zr * Zi + Ci,
      Zr = Tr - Ti + Cr,
      Tr = Zr * Zr,
      Ti = Zi * Zi;
    }

    byte_acc &lt;&lt;= <span class="num">1</span>;

    <span class="kwa">if</span> (Tr + Ti &lt;= limit) {
      byte_acc |=  <span class="num">1</span>;
    }

    bit_num += <span class="num">1</span>;

    <span class="kwa">if</span> (bit_num === <span class="num">8</span>) {
      <span class="kwd">print</span>(String.<span class="kwd">fromCharCode</span>(byte_acc));
      byte_acc = <span class="num">0</span>,
      bit_num = <span class="num">0</span>;
    } <span class="kwa">else if</span> (x === d - <span class="num">1</span>) {
      byte_acc &lt;&lt;= <span class="num">8</span> - d % <span class="num">8</span>;
      <span class="kwd">print</span>(String.<span class="kwd">fromCharCode</span>(byte_acc));
      byte_acc = <span class="num">0</span>,
      bit_num = <span class="num">0</span>;
    }
  }
}
