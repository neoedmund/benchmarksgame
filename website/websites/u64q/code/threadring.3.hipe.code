<span class="slc">% The Computer Language Benchmarks Game</span>
<span class="slc">% http://benchmarksgame.alioth.debian.org/</span>
<span class="slc">% Contributed by John Shahbazian</span>

<span class="opt">-</span><span class="kwd">module</span><span class="opt">(</span>threadring<span class="opt">).</span>
<span class="opt">-</span><span class="kwd">export</span><span class="opt">([</span>main<span class="opt">/</span><span class="num">1</span><span class="opt">,</span>process_spawner<span class="opt">/</span><span class="num">2</span><span class="opt">,</span>ring_node<span class="opt">/</span><span class="num">1</span><span class="opt">]).</span>

<span class="opt">-</span><span class="kwd">define</span><span class="opt">(</span>TOTAL_PROCESSES<span class="opt">,</span> <span class="num">503</span><span class="opt">).</span>

<span class="kwd">main</span><span class="opt">([</span>Arg<span class="opt">]) -&gt;</span>
  N <span class="opt">=</span> <span class="kwb">list_to_integer</span><span class="opt">(</span>Arg<span class="opt">),</span>
  Pid <span class="opt">=</span> <span class="kwd">process_spawner</span><span class="opt">(</span>?TOTAL_PROCESSES<span class="opt">,[]),</span>
  Pid <span class="opt">!</span> N<span class="opt">.</span>

<span class="kwd">process_spawner</span><span class="opt">(</span>Num_Processes<span class="opt">,[]) -&gt;</span>
  Pid <span class="opt">=</span> <span class="kwb">spawn</span><span class="opt">(</span>threadring<span class="opt">,</span>ring_node<span class="opt">,[</span><span class="kwb">self</span><span class="opt">()]),</span>
  <span class="kwb">register</span><span class="opt">(</span><span class="kwb">list_to_atom</span><span class="opt">(</span><span class="str">&quot;number&quot;</span> <span class="opt">++</span> <span class="kwb">integer_to_list</span><span class="opt">(</span><span class="num">1</span><span class="opt">)),</span>Pid<span class="opt">),</span>
  Next_Pid <span class="opt">=</span> <span class="kwb">spawn</span><span class="opt">(</span>threadring<span class="opt">,</span>ring_node<span class="opt">,[</span><span class="kwd">process_spawner</span><span class="opt">(</span>Num_Processes<span class="opt">-</span><span class="num">2</span><span class="opt">,</span>Pid<span class="opt">)]),</span>
  <span class="kwb">register</span><span class="opt">(</span><span class="kwb">list_to_atom</span><span class="opt">(</span><span class="str">&quot;number&quot;</span> <span class="opt">++</span> <span class="kwb">integer_to_list</span><span class="opt">(</span><span class="num">2</span><span class="opt">)),</span>Next_Pid<span class="opt">),</span>
  Pid <span class="opt">! {</span>update<span class="opt">,</span>Next_Pid<span class="opt">},</span>
  Pid<span class="opt">;</span>
<span class="kwd">process_spawner</span><span class="opt">(</span><span class="num">1</span><span class="opt">,</span>Starter_Pid<span class="opt">) -&gt;</span>
  Pid <span class="opt">=</span> <span class="kwb">spawn</span><span class="opt">(</span>threadring<span class="opt">,</span>ring_node<span class="opt">,[</span>Starter_Pid<span class="opt">]),</span>
  <span class="kwb">register</span><span class="opt">(</span><span class="kwb">list_to_atom</span><span class="opt">(</span><span class="str">&quot;number&quot;</span> <span class="opt">++</span> <span class="kwb">integer_to_list</span><span class="opt">(</span>?TOTAL_PROCESSES<span class="opt">)),</span>Pid<span class="opt">),</span>
  Pid<span class="opt">;</span>
<span class="kwd">process_spawner</span><span class="opt">(</span>Num_Processes<span class="opt">,</span>Starter_Pid<span class="opt">) -&gt;</span>
  Pid <span class="opt">=</span> <span class="kwb">spawn</span><span class="opt">(</span>threadring<span class="opt">,</span>ring_node<span class="opt">,[</span><span class="kwd">process_spawner</span><span class="opt">(</span>Num_Processes<span class="opt">-</span><span class="num">1</span><span class="opt">,</span>Starter_Pid<span class="opt">)]),</span>
  <span class="kwb">register</span><span class="opt">(</span><span class="kwb">list_to_atom</span><span class="opt">(</span><span class="str">&quot;number&quot;</span> <span class="opt">++</span> <span class="kwb">integer_to_list</span><span class="opt">(</span>?TOTAL_PROCESSES <span class="opt">- (</span>Num_Processes<span class="opt">-</span><span class="num">1</span><span class="opt">) )),</span>Pid<span class="opt">),</span>
  Pid<span class="opt">.</span>

<span class="kwd">ring_node</span><span class="opt">(</span>Send_To_Pid<span class="opt">) -&gt;</span>
  <span class="kwa">receive</span>
    <span class="opt">{</span>update<span class="opt">,</span> New_Pid<span class="opt">} -&gt;</span>
      <span class="kwd">ring_node</span><span class="opt">(</span>New_Pid<span class="opt">);</span>
    <span class="num">0</span> <span class="opt">-&gt;</span>
      <span class="opt">{</span>_<span class="opt">,</span>Process_Name<span class="opt">} =</span> <span class="kwb">process_info</span><span class="opt">(</span><span class="kwb">self</span><span class="opt">(),</span>registered_name<span class="opt">),</span>
      Process_Name2 <span class="opt">=</span> <span class="kwc">string</span><span class="opt">:</span><span class="kwd">sub_string</span><span class="opt">(</span><span class="kwb">atom_to_list</span><span class="opt">(</span>Process_Name<span class="opt">),</span><span class="num">7</span><span class="opt">),</span>
      <span class="kwc">io</span><span class="opt">:</span><span class="kwd">fwrite</span><span class="opt">(</span><span class="str">&quot;~s~n&quot;</span><span class="opt">,[</span>Process_Name2<span class="opt">]),</span>
      <span class="kwc">erlang</span><span class="opt">:</span><span class="kwb">halt</span><span class="opt">();</span>     
    N <span class="opt">-&gt;</span>
      Send_To_Pid <span class="opt">! (</span>N<span class="opt">-</span><span class="num">1</span><span class="opt">),</span>
      <span class="kwd">ring_node</span><span class="opt">(</span>Send_To_Pid<span class="opt">)</span>        
  <span class="kwa">end</span><span class="opt">.</span>
