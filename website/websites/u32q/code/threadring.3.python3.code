<span class="slc"># The Computer Language Benchmarks Game</span>
<span class="slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># contributed by Daniel Nanz 2008-03-11</span>

<span class="slc"># Coroutines via enhanced generators</span>
<span class="slc"># 2to3</span>

<span class="kwa">import</span> sys
<span class="kwa">import</span> itertools
      
<span class="kwa">def</span> <span class="kwd">main</span>(n = <span class="kwb">int</span>(sys.argv[<span class="num">1</span>]), n_threads=<span class="num">503</span>, cycle=itertools.cycle):

    <span class="kwa">def</span> <span class="kwd">worker</span>(worker_id):
        
        n = <span class="num">1</span>
        <span class="kwa">while True</span>:
            <span class="kwa">if</span> n &gt; <span class="num">0</span>:
                n = (<span class="kwa">yield</span> (n - <span class="num">1</span>))
            <span class="kwa">else</span>:
                <span class="kwa">print</span>(worker_id)
                <span class="kwa">raise</span> <span class="kwc">StopIteration</span>


    threadRing = [<span class="kwd">worker</span>(w) <span class="kwa">for</span> w <span class="kwa">in</span> <span class="kwb">range</span>(<span class="num">1</span>, n_threads + <span class="num">1</span>)]
    <span class="kwa">for</span> t <span class="kwa">in</span> threadRing: foo = <span class="kwd">next</span>(t)           <span class="slc"># start exec. gen. funcs</span>
    sendFuncRing = [t.send <span class="kwa">for</span> t <span class="kwa">in</span> threadRing]   <span class="slc"># speed...</span>
    <span class="kwa">for</span> send <span class="kwa">in</span> <span class="kwd">cycle</span>(sendFuncRing):
        <span class="kwa">try</span>:
            n = <span class="kwd">send</span>(n)
        <span class="kwa">except</span> <span class="kwc">StopIteration</span>:
            <span class="kwa">break</span>

<span class="kwd">main</span>()
