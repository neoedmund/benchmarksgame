&lt;?php 
<span class="com">/* The Computer Language Benchmarks Game</span>
<span class="com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Oleksii Prudkyi</span>
<span class="com">   port from pidigits.lua-5.lua (Mike Pall, Wim Couwenberg)</span>
<span class="com">*/</span>

$u = <span class="kwd">gmp_init</span>(<span class="num">0</span>);
$v = <span class="kwd">gmp_init</span>(<span class="num">0</span>);
$w = <span class="kwd">gmp_init</span>(<span class="num">0</span>);

<span class="kwa">function</span> <span class="kwd">produce</span>(&amp;$n1, &amp;$n2, &amp;$d, $k) 
{
   <span class="kwa">global</span> $u, $v, $w;
   $u = <span class="kwd">gmp_mul</span>($n1, <span class="num">2</span>*$k-<span class="num">1</span>);
   $v = <span class="kwd">gmp_add</span>($n2, $n2);
   $w = <span class="kwd">gmp_mul</span>($n1, $k-<span class="num">1</span>);
   $n1 = <span class="kwd">gmp_add</span>($u, $v);
   $u = <span class="kwd">gmp_mul</span>($n2, $k+<span class="num">2</span>);
   $n2 = <span class="kwd">gmp_add</span>($w, $u);
   $d = <span class="kwd">gmp_mul</span>($d, <span class="num">2</span>*$k+<span class="num">1</span>);
}

<span class="kwa">function</span> <span class="kwd">extractd</span>(&amp;$n1, &amp;$n2, $d, $y)
{
   <span class="kwa">global</span> $u;
   $u = <span class="kwd">gmp_mul</span>($d, <span class="kwd">gmp_mul</span>(-<span class="num">10</span>, $y));
   $n1 = <span class="kwd">gmp_mul</span>($n1, <span class="num">10</span>);
   $n1 = <span class="kwd">gmp_add</span>($n1, $u);
   $n2 = <span class="kwd">gmp_mul</span>($n2, <span class="num">10</span>);
   $n2 = <span class="kwd">gmp_add</span>($n2, $u);
}

<span class="kwa">function</span> <span class="kwd">digit</span>($n1, $n2, $d)
{
   <span class="kwa">global</span> $u, $v;
   $u = <span class="kwd">gmp_div_q</span>($n1, $d);
   $v = <span class="kwd">gmp_div_q</span>($n2, $d);
   <span class="kwa">if</span>(<span class="kwd">gmp_cmp</span>($u, $v) == <span class="num">0</span>) {
      <span class="kwa">return</span> $u;
   }
   <span class="kwa">return</span> false;
}

<span class="slc">//Generate successive digits of PI.</span>
<span class="kwa">function</span> <span class="kwd">pidigits</span>($N)
{
   $k = <span class="num">1</span>;
   $n1 = <span class="kwd">gmp_init</span>(<span class="num">4</span>);
   $n2 = <span class="kwd">gmp_init</span>(<span class="num">3</span>);
   $d = <span class="kwd">gmp_init</span>(<span class="num">1</span>);
   
   $i = <span class="num">0</span>;
   <span class="kwa">while</span>($i &lt; $N) {
      $y = <span class="kwd">digit</span>($n1, $n2, $d);
      <span class="kwa">if</span>($y !== false) {
         <span class="kwa">echo</span> <span class="kwd">gmp_strval</span>($y);
         $i++;
         <span class="kwa">if</span>($i % <span class="num">10</span> == <span class="num">0</span>) {
            <span class="kwa">echo</span> <span class="str">&quot;</span><span class="esc">\t</span><span class="str">:&quot;</span> , $i , <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>;
         }
         <span class="kwd">extractd</span>($n1, $n2, $d, $y);
      } <span class="kwa">else</span> {
         <span class="kwd">produce</span>($n1, $n2, $d, $k);
         $k++;
      }
   }
   <span class="kwa">if</span>($i % <span class="num">10</span> != <span class="num">0</span>) {
      <span class="kwa">echo</span> <span class="kwd">str_repeat</span>(<span class="str">' '</span>, <span class="num">10</span> - $N % <span class="num">10</span>), <span class="str">&quot;</span><span class="esc">\t</span><span class="str">:&quot;</span>, $N, <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>;
   }
}

$N = (<span class="kwb">int</span>) $argv[<span class="num">1</span>];
<span class="kwd">ob_start</span>();
<span class="kwd">pidigits</span>($N);
<span class="kwd">ob_end_flush</span>();


